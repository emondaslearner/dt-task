openapi: 3.0.0
info:
  title: Dt-task
  version: 3.0.0
servers:
  - url: http://localhost:8000
paths:
  /api/v3/app/events:
    post:
      tags:
        - Events
      summary: Create Event
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - type
                - uid
                - name
                - schedule
              properties:
                type:
                  type: string
                  example: event
                uid:
                  type: integer
                  example: 20
                name:
                  type: string
                  example: Tech Conference
                tagline:
                  type: string
                  example: Innovation for the Future
                schedule:
                  type: string
                  format: date-time
                  example: "2024-12-01T10:00:00Z"
                description:
                  type: string
                  example: A conference about technology and innovation
                moderator:
                  type: string
                  example: John Doe
                category:
                  type: string
                  example: Technology
                sub_category:
                  type: string
                  example: AI and ML
                rigor_rank:
                  type: integer
                  example: 5
                attendees:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
                images:
                  type: string
                  format: binary
      responses:
        201:
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Uploaded data successfully
                  self:
                    type: string
                    example: /api/v3/app/events
                  links:
                    type: object
                    properties:
                      getEvent:
                        type: string
                        example: /api/v3/app/events/673f52f28ca574c80d7614db
                      deleteEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      updateEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      getAllEvent:
                        type: string
                        example: /api/v3/app/events
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Type is required."
    get:
      tags:
        - Events
      summary: Get all events
      parameters:
        - name: searchFields
          in: query
          description: Fields to search
          schema:
            type: string
          example: name|tagline|description|category|sub_category|rigor_rank_range|type
        - name: searchValues
          in: query
          description: Values to search for
          schema:
            type: string
          example: Tech Conference|Innovation for the Future|A conference|Technology|AI and ML|1_10|event
        - name: limit
          in: query
          description: Number of results to return per page
          schema:
            type: integer
          example: 5
        - name: page
          in: query
          description: Page number to fetch
          schema:
            type: integer
          example: 2
        - name: sortType
          in: query
          description: Sort type dsc|asc
          schema:
            type: string
          example: dsc
        - name: sortBy
          in: query
          description: Field which you and to do sort
          schema:
            type: string
          example: updatedAt
      responses:
        200:
          description: Successfully retrieved events.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Events retrieved successfully."
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "673efc51c5c0214815dde615"
                        type:
                          type: string
                          example: "event"
                        uid:
                          type: string
                          example: "20"
                        name:
                          type: string
                          example: "Tech Conference"
                        tagline:
                          type: string
                          example: "Innovation for the Future"
                        schedule:
                          type: string
                          format: date-time
                          example: "2024-12-01T10:00:00Z"
                        description:
                          type: string
                          example: "A conference about technology and innovation"
                        moderator:
                          type: string
                          example: "John Doe"
                        category:
                          type: string
                          example: "Technology"
                        sub_category:
                          type: string
                          example: "AI and ML"
                        rigor_rank:
                          type: integer
                          example: 5
                        attendees:
                          type: array
                          items:
                            type: integer
                          example: [1, 2, 3]
                        files:
                          type: array
                          items:
                            type: string
                          example: []
                  self:
                    type: string
                    example: "/api/v3/app/events"
                  links:
                    type: object
                    properties:
                      prvPage:
                        type: string
                        example: "/api/v3/app/events/?searchFields=name%7Ctagline%7Cdescription%7Ccategory%7Csub_category%7Crigor_rank_range%7C&page=1"
                      nextPage:
                        type: string
                        example: "/api/v3/app/events/?searchFields=name%7Ctagline%7Cdescription%7Ccategory%7Csub_category%7Crigor_rank_range%7C&page=3"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Mismatch between search fields and values"
  /api/v3/app/event/{id}:
    put:
      tags:
        - Events
      summary: Update or Create Event
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the event
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: event
                uid:
                  type: integer
                  example: 20
                name:
                  type: string
                  example: Updated name
                tagline:
                  type: string
                  example: Innovation for the Future
                schedule:
                  type: string
                  format: date-time
                  example: "2024-12-01T10:00:00Z"
                description:
                  type: string
                  example: A conference about technology and innovation
                moderator:
                  type: string
                  example: John Doe
                category:
                  type: string
                  example: Technology
                sub_category:
                  type: string
                  example: AI and ML
                rigor_rank:
                  type: integer
                  example: 5
                attendees:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
                images:
                  type: string
                  format: binary
      responses:
        201:
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Uploaded data successfully
                  self:
                    type: string
                    example: /api/v3/app/events
                  links:
                    type: object
                    properties:
                      getEvent:
                        type: string
                        example: /api/v3/app/events/673f52f28ca574c80d7614db
                      deleteEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      updateEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      getAllEvent:
                        type: string
                        example: /api/v3/app/events
        200:
          description: Data updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Data updated successfully
                  self:
                    type: string
                    example: "/api/v3/app/event/673efb3055fdae1f1947519f"
                  links:
                    type: object
                    properties:
                      getEvent:
                        type: string
                        example: /api/v3/app/events/673f52f28ca574c80d7614db
                      deleteEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      createEvent:
                        type: string
                        example: /api/v3/app/events
                      updateEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Type is required."

    get:
      tags:
        - Events
      summary: Get single event
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the event
          schema:
            type: string
      responses:
        200:
          description: Event details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Fetched event data successfully."
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "673efb175feae8c236e26899"
                      type:
                        type: string
                        example: "event"
                      uid:
                        type: string
                        example: "20"
                      name:
                        type: string
                        example: "Updated name"
                      tagline:
                        type: string
                        example: "Innovation for the Future"
                      schedule:
                        type: string
                        format: date-time
                        example: "2024-12-01T10:00:00Z"
                      description:
                        type: string
                        example: "A conference about technology and innovation"
                      moderator:
                        type: string
                        example: "John Doe"
                      category:
                        type: string
                        example: "Technology"
                      sub_category:
                        type: string
                        example: "AI and ML"
                      rigor_rank:
                        type: integer
                        example: 5
                      attendees:
                        type: array
                        items:
                          type: integer
                        example: [1, 2, 3]
                      files:
                        type: array
                        items:
                          type: string
                        example:
                          - "https://res.cloudinary.com/dgkylij0z/image/upload/v1732186194/dt-task/pdq2qlj24xlmclcynhxg.jpg"
                  links:
                    type: object
                    properties:
                      getEvents:
                        type: string
                        example: /api/v3/app/events
                      deleteEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
                      createEvent:
                        type: string
                        example: /api/v3/app/events
                      updateEvent:
                        type: string
                        example: /api/v3/app/event/673f52f28ca574c80d7614db
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"

    delete:
      tags:
        - Events
      summary: Delete an event
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the event
          schema:
            type: string
      responses:
        204:
          description: Event deleted successfully
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Resource not found"
